5


----------------------------------------------------------------------------
Training XGBoost with config/adult.yml in env gbdt

Namespace(config='config/adult.yml', model_name='XGBoost', dataset='Adult', objective='binary', use_gpu=False, gpu_ids=[0, 1], data_parallel=True, optimize_hyperparameters=False, n_trials=2, direction='maximize', num_splits=5, shuffle=True, seed=221, scale=True, target_encode=True, one_hot_encode=False, batch_size=128, val_batch_size=256, early_stopping_rounds=20, epochs=3, logging_period=100, num_features=14, num_classes=1, cat_idx=[1, 3, 5, 6, 7, 8, 9, 13], cat_dims=[9, 16, 7, 15, 6, 5, 2, 42])
Train model with given hyperparameters
Loading dataset Adult...
Dataset loaded!
(32561, 14)
Scaling the data...
[0]	eval-auc:0.86775
[2]	eval-auc:0.88424
{'Log Loss - mean': 0.49963757692198585, 'Log Loss - std': 0.0, 'AUC - mean': 0.8842407816493099, 'AUC - std': 0.0, 'Accuracy - mean': 0.7590971902349147, 'Accuracy - std': 0.0, 'F1 score - mean': 0.7590971902349147, 'F1 score - std': 0.0}
[0]	eval-auc:0.87996
[2]	eval-auc:0.88703
{'Log Loss - mean': 0.49913185767252627, 'Log Loss - std': 0.0005057192494595797, 'AUC - mean': 0.8856377533977182, 'AUC - std': 0.0013969717484083044, 'Accuracy - mean': 0.759155474724337, 'Accuracy - std': 5.828448942224451e-05, 'F1 score - mean': 0.759155474724337, 'F1 score - std': 5.828448942224451e-05}
[0]	eval-auc:0.88717
[2]	eval-auc:0.89515
{'Log Loss - mean': 0.49841058306372704, 'Log Loss - std': 0.0011004432873981756, 'AUC - mean': 0.8888086025034608, 'AUC - std': 0.004627049615757143, 'Accuracy - mean': 0.7591749028874778, 'Accuracy - std': 5.495114361128626e-05, 'F1 score - mean': 0.7591749028874778, 'F1 score - std': 5.495114361128626e-05}
[0]	eval-auc:0.87344
[2]	eval-auc:0.89339
{'Log Loss - mean': 0.4981870777460285, 'Log Loss - std': 0.0010286376683280327, 'AUC - mean': 0.889953861229686, 'AUC - std': 0.004471246331840076, 'Accuracy - mean': 0.7591846169690482, 'Accuracy - std': 5.047584848626914e-05, 'F1 score - mean': 0.7591846169690482, 'F1 score - std': 5.047584848626914e-05}
[0]	eval-auc:0.87732
[2]	eval-auc:0.88259
{'Log Loss - mean': 0.4984589749467158, 'Log Loss - std': 0.00106873229254524, 'AUC - mean': 0.8884808790488039, 'AUC - std': 0.004967126033107953, 'Accuracy - mean': 0.7591904454179904, 'Accuracy - std': 4.662759153779561e-05, 'F1 score - mean': 0.7591904454179904, 'F1 score - std': 4.662759153779561e-05}
Results: {'Log Loss - mean': 0.4984589749467158, 'Log Loss - std': 0.00106873229254524, 'AUC - mean': 0.8884808790488039, 'AUC - std': 0.004967126033107953, 'Accuracy - mean': 0.7591904454179904, 'Accuracy - std': 4.662759153779561e-05, 'F1 score - mean': 0.7591904454179904, 'F1 score - std': 4.662759153779561e-05}
Train time: 0.18845315879999988
Inference time: 0.03170468880000001
Finished cross validation
{'Log Loss - mean': 0.4984589749467158, 'Log Loss - std': 0.00106873229254524, 'AUC - mean': 0.8884808790488039, 'AUC - std': 0.004967126033107953, 'Accuracy - mean': 0.7591904454179904, 'Accuracy - std': 4.662759153779561e-05, 'F1 score - mean': 0.7591904454179904, 'F1 score - std': 4.662759153779561e-05}
(0.18845315879999988, 0.03170468880000001)


----------------------------------------------------------------------------
Training XGBoost with config/california_housing.yml in env gbdt

/home/houssam.bouchouk/.conda/envs/gbdt/lib/python3.11/site-packages/xgboost/core.py:160: UserWarning: [23:45:42] WARNING: /workspace/src/common/error_msg.cc:45: `gpu_id` is deprecated since2.0.0, use `device` instead. E.g. device=cpu/cuda/cuda:0
  warnings.warn(smsg, UserWarning)
/home/houssam.bouchouk/.conda/envs/gbdt/lib/python3.11/site-packages/xgboost/core.py:160: UserWarning: [23:45:42] WARNING: /workspace/src/context.cc:44: No visible GPU is found, setting device to CPU.
  warnings.warn(smsg, UserWarning)
/home/houssam.bouchouk/.conda/envs/gbdt/lib/python3.11/site-packages/xgboost/core.py:160: UserWarning: [23:45:42] WARNING: /workspace/src/common/error_msg.cc:27: The tree method `gpu_hist` is deprecated since 2.0.0. To use GPU training, set the `device` parameter to CUDA instead.

    E.g. tree_method = "hist", device = "cuda"

  warnings.warn(smsg, UserWarning)
Namespace(config='config/california_housing.yml', model_name='XGBoost', dataset='CaliforniaHousing', objective='regression', use_gpu=True, gpu_ids=[0, 1], data_parallel=True, optimize_hyperparameters=False, n_trials=2, direction='minimize', num_splits=5, shuffle=True, seed=221, scale=True, target_encode=False, one_hot_encode=False, batch_size=128, val_batch_size=256, early_stopping_rounds=20, epochs=3, logging_period=100, num_features=8, num_classes=1, cat_idx=None, cat_dims=None)
Train model with given hyperparameters
Loading dataset CaliforniaHousing...
Dataset loaded!
(20640, 8)
Scaling the data...
Traceback (most recent call last):
  File "/srv/lustre01/project/manapy-um6p-st-msda-1wabcjwe938/users/houssam.bouchouk/TabSurvey/train.py", line 154, in <module>
    main_once(arguments)
  File "/srv/lustre01/project/manapy-um6p-st-msda-1wabcjwe938/users/houssam.bouchouk/TabSurvey/train.py", line 138, in main_once
    sc, time = cross_validation(model, X, y, args)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/srv/lustre01/project/manapy-um6p-st-msda-1wabcjwe938/users/houssam.bouchouk/TabSurvey/train.py", line 44, in cross_validation
    loss_history, val_loss_history = curr_model.fit(X_train, y_train, X_test, y_test)  # X_val, y_val)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/srv/lustre01/project/manapy-um6p-st-msda-1wabcjwe938/users/houssam.bouchouk/TabSurvey/models/tree_models.py", line 44, in fit
    self.model = xgb.train(self.params, train, num_boost_round=self.args.epochs, evals=eval_list,
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/houssam.bouchouk/.conda/envs/gbdt/lib/python3.11/site-packages/xgboost/core.py", line 730, in inner_f
    return func(**kwargs)
           ^^^^^^^^^^^^^^
  File "/home/houssam.bouchouk/.conda/envs/gbdt/lib/python3.11/site-packages/xgboost/training.py", line 181, in train
    bst.update(dtrain, i, obj)
  File "/home/houssam.bouchouk/.conda/envs/gbdt/lib/python3.11/site-packages/xgboost/core.py", line 2050, in update
    _check_call(
  File "/home/houssam.bouchouk/.conda/envs/gbdt/lib/python3.11/site-packages/xgboost/core.py", line 282, in _check_call
    raise XGBoostError(py_str(_LIB.XGBGetLastError()))
xgboost.core.XGBoostError: [23:45:42] /workspace/src/tree/updater_gpu_hist.cu:781: Exception in gpu_hist: [23:45:42] /workspace/src/tree/updater_gpu_hist.cu:787: Check failed: ctx_->gpu_id >= 0 (-1 vs. 0) : Must have at least one device
Stack trace:
  [bt] (0) /home/houssam.bouchouk/.conda/envs/gbdt/lib/python3.11/site-packages/xgboost/lib/libxgboost.so(+0xb27f2a) [0x1462d7c0df2a]
  [bt] (1) /home/houssam.bouchouk/.conda/envs/gbdt/lib/python3.11/site-packages/xgboost/lib/libxgboost.so(+0xb3e95a) [0x1462d7c2495a]
  [bt] (2) /home/houssam.bouchouk/.conda/envs/gbdt/lib/python3.11/site-packages/xgboost/lib/libxgboost.so(+0xb483cd) [0x1462d7c2e3cd]
  [bt] (3) /home/houssam.bouchouk/.conda/envs/gbdt/lib/python3.11/site-packages/xgboost/lib/libxgboost.so(+0x460c79) [0x1462d7546c79]
  [bt] (4) /home/houssam.bouchouk/.conda/envs/gbdt/lib/python3.11/site-packages/xgboost/lib/libxgboost.so(+0x46176c) [0x1462d754776c]
  [bt] (5) /home/houssam.bouchouk/.conda/envs/gbdt/lib/python3.11/site-packages/xgboost/lib/libxgboost.so(+0x4c54f7) [0x1462d75ab4f7]
  [bt] (6) /home/houssam.bouchouk/.conda/envs/gbdt/lib/python3.11/site-packages/xgboost/lib/libxgboost.so(XGBoosterUpdateOneIter+0x70) [0x1462d7247ef0]
  [bt] (7) /home/houssam.bouchouk/.conda/envs/gbdt/lib/python3.11/lib-dynload/../../libffi.so.8(+0xa052) [0x146309d72052]
  [bt] (8) /home/houssam.bouchouk/.conda/envs/gbdt/lib/python3.11/lib-dynload/../../libffi.so.8(+0x8925) [0x146309d70925]



Stack trace:
  [bt] (0) /home/houssam.bouchouk/.conda/envs/gbdt/lib/python3.11/site-packages/xgboost/lib/libxgboost.so(+0xb27f2a) [0x1462d7c0df2a]
  [bt] (1) /home/houssam.bouchouk/.conda/envs/gbdt/lib/python3.11/site-packages/xgboost/lib/libxgboost.so(+0xb485c9) [0x1462d7c2e5c9]
  [bt] (2) /home/houssam.bouchouk/.conda/envs/gbdt/lib/python3.11/site-packages/xgboost/lib/libxgboost.so(+0x460c79) [0x1462d7546c79]
  [bt] (3) /home/houssam.bouchouk/.conda/envs/gbdt/lib/python3.11/site-packages/xgboost/lib/libxgboost.so(+0x46176c) [0x1462d754776c]
  [bt] (4) /home/houssam.bouchouk/.conda/envs/gbdt/lib/python3.11/site-packages/xgboost/lib/libxgboost.so(+0x4c54f7) [0x1462d75ab4f7]
  [bt] (5) /home/houssam.bouchouk/.conda/envs/gbdt/lib/python3.11/site-packages/xgboost/lib/libxgboost.so(XGBoosterUpdateOneIter+0x70) [0x1462d7247ef0]
  [bt] (6) /home/houssam.bouchouk/.conda/envs/gbdt/lib/python3.11/lib-dynload/../../libffi.so.8(+0xa052) [0x146309d72052]
  [bt] (7) /home/houssam.bouchouk/.conda/envs/gbdt/lib/python3.11/lib-dynload/../../libffi.so.8(+0x8925) [0x146309d70925]
  [bt] (8) /home/houssam.bouchouk/.conda/envs/gbdt/lib/python3.11/lib-dynload/../../libffi.so.8(ffi_call+0xde) [0x146309d7106e]




----------------------------------------------------------------------------
Training XGBoost with config/covertype.yml in env gbdt

Namespace(config='config/covertype.yml', model_name='XGBoost', dataset='Covertype', objective='classification', use_gpu=False, gpu_ids=[0, 1], data_parallel=True, optimize_hyperparameters=False, n_trials=2, direction='minimize', num_splits=5, shuffle=True, seed=221, scale=True, target_encode=True, one_hot_encode=False, batch_size=128, val_batch_size=256, early_stopping_rounds=20, epochs=3, logging_period=100, num_features=54, num_classes=7, cat_idx=None, cat_dims=None)
Train model with given hyperparameters
Loading dataset Covertype...
Dataset loaded!
(581012, 54)
Having 7 classes as target.
Scaling the data...
[0]	eval-mlogloss:1.71754
[2]	eval-mlogloss:1.40194
{'Log Loss - mean': 1.4019363561458549, 'Log Loss - std': 0.0, 'AUC - mean': 0.9776904091847058, 'AUC - std': 0.0, 'Accuracy - mean': 0.868893229951034, 'Accuracy - std': 0.0, 'F1 score - mean': 0.8672329303791926, 'F1 score - std': 0.0}
[0]	eval-mlogloss:1.71724
[2]	eval-mlogloss:1.40147
{'Log Loss - mean': 1.4017032275745585, 'Log Loss - std': 0.00023312857129642595, 'AUC - mean': 0.9769441523566008, 'AUC - std': 0.0007462568281050297, 'Accuracy - mean': 0.8689147440255416, 'Accuracy - std': 2.1514074507511527e-05, 'F1 score - mean': 0.8673398291542876, 'F1 score - std': 0.00010689877509506562}
[0]	eval-mlogloss:1.71704
[2]	eval-mlogloss:1.40078
{'Log Loss - mean': 1.4013956966681456, 'Log Loss - std': 0.0004747453394205147, 'AUC - mean': 0.9771948854696518, 'AUC - std': 0.0007049825224473335, 'Accuracy - mean': 0.8687178710937619, 'Accuracy - std': 0.0002789739643819595, 'F1 score - mean': 0.8671432594959688, 'F1 score - std': 0.0002913717440334098}
[0]	eval-mlogloss:1.71695
[2]	eval-mlogloss:1.40240
{'Log Loss - mean': 1.401646185751512, 'Log Loss - std': 0.0005977220889619366, 'AUC - mean': 0.977217434063244, 'AUC - std': 0.0006117806673441905, 'Accuracy - mean': 0.868387080623638, 'Accuracy - std': 0.0006218013026493801, 'F1 score - mean': 0.866842398895864, 'F1 score - std': 0.000578985683762579}
[0]	eval-mlogloss:1.71710
[2]	eval-mlogloss:1.40129
{'Log Loss - mean': 1.4015740665402954, 'Log Loss - std': 0.000553734664810158, 'AUC - mean': 0.9773940467096234, 'AUC - std': 0.0006512976089264312, 'Accuracy - mean': 0.8686825737431574, 'Accuracy - std': 0.0008115258607799183, 'F1 score - mean': 0.8671336766594822, 'F1 score - std': 0.000779455245614062}
Results: {'Log Loss - mean': 1.4015740665402954, 'Log Loss - std': 0.000553734664810158, 'AUC - mean': 0.9773940467096234, 'AUC - std': 0.0006512976089264312, 'Accuracy - mean': 0.8686825737431574, 'Accuracy - std': 0.0008115258607799183, 'F1 score - mean': 0.8671336766594822, 'F1 score - std': 0.000779455245614062}
Train time: 5.873919163800001
Inference time: 0.6625237083999999
Finished cross validation
{'Log Loss - mean': 1.4015740665402954, 'Log Loss - std': 0.000553734664810158, 'AUC - mean': 0.9773940467096234, 'AUC - std': 0.0006512976089264312, 'Accuracy - mean': 0.8686825737431574, 'Accuracy - std': 0.0008115258607799183, 'F1 score - mean': 0.8671336766594822, 'F1 score - std': 0.000779455245614062}
(5.873919163800001, 0.6625237083999999)
